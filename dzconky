#!/bin/bash

#Variables
ICONPATH="/usr/share/icons/stlarch_icons"  #stlarch icons
DZEN_FG="#FC164C"
DZEN_BG="#000000"
BAR_H=22
BAR_W=1800
FONT="-*-terminus-medium-r-*-*-14-*-*-*-*-*-iso10646-*"
SLEEP=3
DZEN="dzen2 -e - -ta l -w $BAR_W -h $BAR_H -fg $DZEN_FG -bg $DZEN_BG -fn $FONT" 

#Loop infini
while :; do

#Volume
Vol() {
	VOL=$(pamixer --get-volume)
    	MUTE=$(pamixer --get-mute)
	if [[ $MUTE == "false" ]] ; then
		echo -n "^fg(#FF6600)^i($ICONPATH/vol1.xbm)^fg()" $(echo $VOL | gdbar -fg '#FF9100' -bg $BAR_BG -h 10 -w 60 -s o -nonl)
	else
		echo -n "^fg(#FF6600)^i($ICONPATH/vol3.xbm)^fg()" $(echo $VOL | gdbar -fg $BAR_FG -bg $BAR_BG -h 10 -w 60 -s o -nonl)
	fi	
	return
}

#Etat de la memoire
Mem() {
	MEM_USED=$(free -h | awk '{ gsub(/,/, "");} NR==2 {print $3}')
	MEM_FREE=$(free -h | awk '{ gsub(/,/, "");} NR==2 {print $4}')
	echo -n "^fg(#00FFFF)^i($ICONPATH/mem1.xbm)^fg(#00D0FF)  ${MEM_USED} / ${MEM_FREE}"
	return
}

#Affichage de la temperature
Temp() {
	TEMP=$(acpi -t | awk '{print $4}' | tr -d '.0')
	if [[ ${TEMP} -gt 63 ]] ; then
		echo -n "^fg(#FF00C4)^i($ICONPATH/temp5.xbm)^fg(#FF009D) ${TEMP} °C" $(echo ${TEMP} | gdbar -fg '#FF005E' -bg $BAR_BG -h 13 -s v -sw 5 -ss 0 -sh 1 -nonl)
	else 
		echo -n "^fg(#FF00C4)^i($ICONPATH/temp5.xbm)^fg(#FF009D) ${TEMP} °C" $(echo ${TEMP} | gdbar -fg '#FF005E' -bg $BAR_BG -h 13 -s v -sw 5 -ss 0 -sh 1 -nonl)
	fi
	return
}

#Espace du disque
Disk() {
	SDA2=$(df -h | awk '{ gsub(/,/, "");} NR==4 {print $3}')
	echo -n "^fg(#0088FF)^i($ICONPATH/file1.xbm)^fg(#0051FF)  ${SDA2}  $(echo $SDA2 | gdbar -fg '#0011FF' -bg $BAR_BG -h 7 -w 40 -s o -ss 0 -sw 2 -nonl)"
	return
}

#Affichage de la version du kernel
Kernel() {
	KERNEL=$(uname -a | awk '{print $3}')
	echo -n "^fg(#7300FF) Kernel: ^fg(#BB00FF)$KERNEL"
	return
}

#Affichage de l'heure et de la date
Date() {
	TIME=$(date +"%a %b %e %R")
	echo -n "  ^fg(#FFFFFF)^i($ICONPATH/clock2.xbm)^fg(#FF001A)  ${TIME}"
	return
}

#Espacement entre les affichages
Espace() {
    	echo -n "   ^fg(#A0A0A0)^r(2x2)^fg()   "
	return
}

#C'est trop cool
Tropcool() {
	echo -n "^fg(#FFFFFF)^i($ICONPATH/heart2.xbm)     "
	return
}

#Etat de la batterie
Battery() {
    	BAT_PERCENT=$(acpi -b | grep -Po "\d{1,}%")
    	BAT_CHARGING=$(acpi -b | grep -Eo "(Discharging)")

    	if [[ $BAT_CHARGING == "Discharging" ]]; then
        	BAT_VAL=$(echo $BAT_PERCENT | grep -Po "\d{2,}")
        	if [[ $BAT_VAL -gt 70 ]]; then
            		echo -n "^fg(#00FF00)^i($ICONPATH/batt5full.xbm)^fg(#FFD000)"
        	elif [[ $BAT_VAL -gt 30 ]]; then
            		echo -n "^fg(#FFFF00)^i($ICONPATH/batt5half.xbm)^fg(#FFD000)"
        	else 
            		echo -n "^fg(#FF0000)^i($ICONPATH/batt5empty.xbm)^fg(#FFD000)"
        	fi
        	echo -n " $BAT_PERCENT"
    	else
        	echo -n "^fg(#00FF00)^i($ICONPATH/ac15.xbm)^fg(#FFD000) ${BAT_PERCENT}"
    	fi
    	return
}

#Affiche reseau connecte, adresse ip
Network() {
    	echo -n "^fg(#AAFF00)^i($ICONPATH/wireless1.xbm)^fg() "
    
    	NETWORK=$(netctl list | awk '/*/ {gsub(/-/, " "); {print $3}}')
    	IP_ADDR=$(ip addr show wlp1s0 | awk '{ gsub(/,/, "");} NR==3 {print $2}')
    	INET=$(ip addr show wlp1s0 | awk '{ gsub(/,/, "");} NR==3 {print $1}')
    
       	if [ -n "$NETWORK" ]; then
		echo -n "^fg(#62FF00) $NETWORK |"
	       	echo -n "^fg(#00FF95) $IP_ADDR |"
 		if [[ $INET == "inet6" ]]; then
			echo -n "^fg(#00FFC8) IPv6 "
    		else
			echo -n "^fg(#00FFC8) IPv4 "
		fi

    	else
		echo -n "^fg(#62FF00) Not Connected "
    	fi
    	return
}

#Logo du OS
OSLogo() {
	echo -n " ^fg(#F200FF)^i($ICONPATH/arch1.xbm)^fg() "
	return
}

#Appel aux fonctions final
Print() {
	Date
	Espace
	Vol
	Espace
	Battery
	Espace
	Network
	Espace
	Mem
	Espace
	Disk
	Espace
	Kernel
	Espace
	OSLogo
	Espace
	Temp
	Espace
	Tropcool
        echo
    	return
}

echo "$(Print)" 
sleep ${SLEEP}

done | $DZEN 
